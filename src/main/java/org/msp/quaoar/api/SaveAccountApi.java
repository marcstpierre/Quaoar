/**
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech) (7.3.0). https://openapi-generator.tech Do
 * not edit the class manually.
 */
package org.msp.quaoar.api;

import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import org.msp.quaoar.api.model.AccountDto;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen",
           date = "2024-11-28T15:28:22.418319539-05:00[America/Toronto]")
@Validated
@Controller
@Tag(name = "saveAccount", description = "the saveAccount API")
public interface SaveAccountApi {

  default SaveAccountApiDelegate getDelegate() {
    return new SaveAccountApiDelegate() {};
  }

  /**
   * POST /saveAccount
   *
   * @param accountDto  (required)
   * @return OK (status code 200)
   */
  @Operation(operationId = "saveAccountPost",
             responses =
             {
               @ApiResponse(
                   responseCode = "200", description = "OK", content = {
                     @Content(mediaType = "application/json",
                              schema =
                                  @Schema(implementation = AccountDto.class))
                   })
             },
             security = { @SecurityRequirement(name = "ApiKeyAuth") })
  @RequestMapping(method = RequestMethod.POST, value = "/saveAccount",
                  produces = {"application/json"},
                  consumes = {"application/json"})

  default ResponseEntity<AccountDto>
  saveAccountPost(@Parameter(name = "AccountDto", description = "",
                             required = true) @Valid
                  @RequestBody AccountDto accountDto) {
    return getDelegate().saveAccountPost(accountDto);
  }
}
